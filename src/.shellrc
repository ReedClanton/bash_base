###########################################################################
## Source Shell Function(s) So They May be Used Durring Environment Setup ##
###########################################################################
if [ -f $HOME/shell/shell_functions ]; then
	. $HOME/shell/shell_functions
fi

###################################
## Determine Current Shell's Name ##
###################################
SHELL_NAME=$(shellName)
stdRt=$?
if [ $stdRt -ne 0 ]; then
	echo "ERROR .shellrc: shellName() failed with return code '$stdRt', falling back to using SHELL ($SHELL) to get shell name." >&2
	if [ "$SHELL" != "" ]; then
		# TODO: Refactor so it cleans SHELL value.
		SHELL_NAME=$SHELL
	else
		echo "ERROR .shellrc: Failed to determine shell name, defaulting to 'bash'." >&2
	fi
else
	export SHELL_NAME
fi

##############################
## Source Global Definitions ##
##############################
if compgen -G "/etc/${SHELL_NAME}rc" > /dev/null; then
	. /etc/${SHELL_NAME}rc
fi
if [ -f $HOME/shell/shell_aliases ]; then
	. $HOME/shell/shell_aliases
fi
if [ -f $HOME/shell/shell_flatpak_aliases ]; then
	. $HOME/shell/shell_flatpak_aliases
fi

######################
## Environment Setup ##
######################
## History Setting(s) ##
# Total number of entries in history file.
HISTSIZE=5000
# Adds time info to the command history.
export HISTTIMEFORMAT='%F %T '
# Removes duplicate sequential entries from command history.
export HISTCONTROL=$HISTCONTROL:ignoredups
# Ignores commands that start with ' '.
export HISTCONTROL=$HISTCONTROL:ignorespace
# Moves location of history file.
export HISTFILE=$HOME/shell/shell_history

## Terminal Setup ##
# When tab-completing, match regardless of case.
bind "set completion-ignore-case on"
# When tab-completing, only requires one press of tab instead of 2 (default).
bind "set show-all-if-ambiguous on"
# The above two options make hidden files show up by default, this turns that behaviour off.
#bind "set match-hidden-files off"
# Uncomment the following line if you don't like systemctl's auto-paging feature:
# export SYSTEMD_PAGER=

unset rc

###########
## Backup ##
###########
# Back up home directory each time any terminal is opened.
backUp >$HOME/.backUp.log 2>&1 &
