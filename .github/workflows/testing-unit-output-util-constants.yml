name: Unit Test output()'s constants
run-name: ${{ github.actor }} has triggered the running of unit tests of output()'s constants file for the ${{ github.run_attempt }} time by initiating a ${{ github.event_name }}
on: push
jobs:
  unit-test-output-util-constants:
    runs-on: ubuntu-20.04
    steps:
      - name: Checking out ${{ github.ref_type }} ${{ github.ref_name }} from ${{ github.repository_owner }}'s ${{ github.repository }} repo on ${{ runner.os }} because ${{ github.actor }} initiated a ${{ github.event_name }}...
        uses: actions/checkout@v3
##      - name: Installing 'Kcov' (test coverage library)...
##        run:  sudo apt-get install binutils-dev libssl-dev libcurl4-openssl-dev zlib1g-dev libdw-dev libiberty-dev
      - name: Installing 'shellspec' (POSIX shell script testing tool)...
        run:  curl -fsSL https://git.io/shellspec | sh -s -- --yes
      - name: Running unit tests from a 'bash' shell (with code coverage) from ${{ github.workspace }}...
        run:  shellspec -s /bin/bash --fail-no-examples --warning-as-failure ./spec/unit/output/util/constants_*
##        run: shellspec -s /bin/bash -p --fail-no-examples --warning-as-failure --kcov --kcov-options "--include-pattern=src/shell/functions/output/util/constants.sh --limits=99,100" --fail-low-coverage ./spec/unit/output/util/constants_*
#      - name: Running unit tests from an 'sh' shell...
#        run:  shellspec -s /bin/sh --fail-no-examples --warning-as-failure ./spec/unit/output/util/constants_*
#      - name: Running unit tests from a 'dash' shell...
#        run:  shellspec -s /bin/dash --fail-no-examples --warning-as-failure ./spec/unit/output/util/constants_*
#      - name: Installing 'ksh' (shell)...
#        run:  sudo apt-get install ksh
#      - name: Running unit tests from a 'ksh' shell...
#        run:  shellspec -s /usr/bin/ksh --fail-no-examples --warning-as-failure ./spec/unit/output/util/constants_*
      - name: Installing 'zsh' (shell)...
        run:  sudo apt install -y zsh
      - name: zsh test setup, create file
        run:  touch ./spec/unit/tmp.sh
      - name: zsh test setup, add exec perm.
        run:  chmod +x ./spec/unit/tmp.sh
#      - name: zsh test setup, write to file
#        run:  sudo echo 'shellspec -s /usr/bin/zsh --fail-no-examples --warning-as-failure ./spec/unit/output/util/constants_*' > ./spec/unit/tmp.sh
#      - name: zsh test setup
#        run:  touch ./spec/unit/tmp.sh; chmod +x ./spec/unit/tmp.sh; sudo echo "shellspec -s /usr/bin/zsh --fail-no-examples --warning-as-failure ./spec/unit/output/util/constants_*" > ./spec/unit/tmp.sh
#      - name: manual test
#        run:  touch ./spec/unit/tmp.sh; chmod +x ./spec/unit/tmp.sh; sudo echo ". ./src/shell/functions/output/util/constants.sh; DEFAULT_LINE_LENGTH=99; echo $?; echo $SHELL" > ./spec/unit/tmp.sh
#      - name: manual test
#        run:  touch ./spec/unit/tmp.sh; chmod +x ./spec/unit/tmp.sh; sudo echo "echo $SHELL" > ./spec/unit/tmp.sh
      - name: cat
        run:  cat ./spec/unit/tmp.sh
#      - name: Running unit tests from a 'zsh' shell...
#        run:  zsh -c -- "shellspec -s /usr/bin/zsh --fail-no-examples --warning-as-failure ./spec/unit/output/util/constants_*"
      - name: Running unit tests from a 'zsh' shell...
        run:  zsh -c -- "./spec/unit/tmp.sh"
##      - name: Installing 'BusyBox' (shell)...
##        run:  sudo apt-get install busybox
##      - name: Running unit tests from a 'busybox' shell...
##        run:  shellspec -s /usr/bin/busybox --fail-no-examples --warning-as-failure ./spec/unit/output/util/constants_*

